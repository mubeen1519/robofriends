{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","_ref","robots","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searhField","target","value","state","inherits","createClass","_this2","fetch","then","responce","json","users","_this$state","filtered","filter","robot","toLowerCase","includes","length","components_SearchBox","components_scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.1df88ce6.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Card = (props) => {\n    const {name , email , id} = props;\n    return (\n        <div className=\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\">\n            <img alt = \"Robots\" src={`https://robohash.org/${id}test?size=150x150`}></img>\n            <div>\n            <h3>{name}</h3>\n            <p> {email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n         {\n        robots.map((user, i) => {\n        return (\n        <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n                        />\n                    );\n\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return(\n        <div className=\"pa2 \">\n        <input className=\" f7 pa3 ba b--green bg-lightest-blue\" \n        type= 'search'\n         placeholder = 'search robots'\n         onChange={searchChange}\n         />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\n\nconst Scroll = (props) => {\n   return(\n    <div style={{overflowY : 'scroll', border : '1px solid black', height: '500px' }}>\n        {props.children};\n    </div>\n   );\n\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/scroll';\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searhField : ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(responce => responce.json())\n        .then(users => this.setState({robots : users}));\n    }\n\n    onSearchChange = (event) =>{\n        this.setState({searhField: event.target.value})\n    }\n\n    render() {\n        const {robots, searhField} = this.state;\n        const filtered = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searhField.toLowerCase());\n        })\n        if(!robots.length){\n           return <h1 className=\"tc\">LOADING</h1>\n        } else {\n        return (\n            <div className=\"tc\" >\n                <h1 className=\"f2\">RoboFriends</h1>\n                <SearchBox searchChange ={this.onSearchChange} />\n\n                <Scroll>\n                <CardList robots={filtered} />\n                </Scroll>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './containers/App'\nimport 'tachyons'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}